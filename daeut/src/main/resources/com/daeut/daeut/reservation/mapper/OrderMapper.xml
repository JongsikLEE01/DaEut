<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.daeut.daeut.reservation.mapper.OrderMapper">

<resultMap id="OrderWithUserResultMap" type="com.daeut.daeut.reservation.dto.Orders">
    <id property="ordersNo" column="orders_no"/>
    <result property="userNo" column="user_no"/>
    <result property="orderStatus" column="order_status"/>
    <result property="totalQuantity" column="total_quantity"/>
    <result property="totalPrice" column="total_price"/>
    <result property="updDate" column="upd_date"/>
    <result property="regDate" column="reg_date"/>
    <result property="totalCount" column="total_count"/>
    <result property="title" column="title"/>
    
    <association property="user" javaType="com.daeut.daeut.auth.dto.Users">
        <id property="userNo" column="user_no"/>
        <result property="userName" column="user_name"/>
        <result property="userPhone" column="user_phone"/>
        <result property="userBirth" column="user_birth"/>
        <result property="userAddress" column="user_address"/>
        <result property="userEmail" column="user_email"/>
        <result property="userGender" column="user_gender"/>
        <result property="userId" column="user_id"/>
        <result property="userPassword" column="user_password"/>
        <result property="userRegDate" column="user_reg_date"/>
        <result property="userCoupon" column="user_coupon"/>
        <result property="userUpdDate" column="user_upd_date"/>
        <result property="enabled" column="enabled"/>
        <result property="status" column="status"/>
    </association>
    
    <association property="partner" javaType="com.daeut.daeut.partner.dto.Partner">
        <id property="partnerNo" column="partner_no"/>
        <result property="partnerGrade" column="partner_grade"/>
        <result property="partnerReserve" column="partner_reserve"/>
        <result property="partnerCareer" column="partner_career"/>
        <result property="introduce" column="introduce"/>
        <result property="userNo" column="user_no"/>
    </association>

    <association property="payment" javaType="com.daeut.daeut.reservation.dto.Payments">
    <result property="serviceDate" column="service_date"/>
    </association>

        <association property="service" column="service_no" javaType="com.daeut.daeut.reservation.dto.Services">
        <id property="serviceNo" column="service_no"/>
        <result property="serviceName" column="service_name"/>
        <result property="serviceCategory" column="service_category"/>
        <result property="servicePrice" column="service_price"/>
        <result property="serviceContent" column="service_content"/>
    </association>
</resultMap>


    <!-- 모든 주문 조회 -->
    <select id="list" resultType="Orders">
        SELECT * 
        FROM orders
    </select>

    <!-- 주문 상세 조회 -->
    <select id="select" resultType="Orders">
        SELECT * 
        FROM orders 
        WHERE orders_no = #{ordersNo}
    </select>

     <!-- 주문 삽입 -->
    <insert id="insert">
        INSERT INTO orders (orders_no, user_no, title, total_quantity, total_price, total_count, order_status)
        VALUES (#{ordersNo}, #{userNo}, #{title}, #{totalQuantity}, #{totalPrice}, #{totalCount}, #{orderStatus})
    </insert>

    <!-- 주문 수정 -->
    <update id="update">
        UPDATE orders
        SET order_status = #{orderStatus}
            , upd_date = now()
        WHERE orders_no = #{ordersNo}
    </update>

    <!-- 데이터 수정 -->
    <update id="updateData">
        UPDATE orders
        SET title = #{title}
            , total_price = #{totalPrice}
            , upd_date = now()
        WHERE orders_no = #{ordersNo}
    </update>

    <!-- 주문 삭제 -->
    <delete id="delete">
        DELETE FROM orders 
        WHERE orders_no = #{ordersNo}
    </delete>


    <!-- 목록 - userId -->
    <select id="listByUserNo" resultType="Orders">
        SELECT *
        FROM orders
        WHERE user_no = #{userNo}
    </select>

    <select id="listByPartnerNo" resultMap="OrderWithUserResultMap">
        SELECT 
        o.orders_no, o.user_no, o.order_status, o.total_quantity, o.total_price, 
        o.upd_date, o.reg_date, o.total_count, o.title,
        oi.item_no, oi.quantity, oi.price, oi.amount, 
        s.service_no, s.service_category, s.service_name, s.service_price, s.service_content, 
        p.partner_no, p.partner_grade, p.partner_reserve, p.partner_career, p.introduce, 
        p.user_no AS partner_user_no, 
        u.user_name, u.user_phone, u.user_birth, u.user_address, u.user_email, u.user_gender, 
        u.user_id, u.user_password, u.user_reg_date, u.user_coupon, u.user_upd_date, 
        u.enabled, u.status, 
        pm.service_date
    FROM 
        orders o
    JOIN 
        order_item oi ON o.orders_no = oi.orders_no
    JOIN 
        service s ON oi.service_no = s.service_no
    JOIN 
        partner p ON s.partner_no = p.partner_no
    JOIN 
        users u ON o.user_no = u.user_no
    JOIN 
        payment pm ON o.orders_no = pm.orders_no
    WHERE 
        p.partner_no = #{partnerNo}

    </select>


    <!-- orderNo로 Oder 정보와 유저 정보 출력하기 -->
    <select id="listByOrderNo" resultMap="OrderWithUserResultMap">
    SELECT 
     o.*
    ,u.*
    FROM 
    orders o
    JOIN 
    users u ON o.user_no = u.user_no
    WHERE 
    o.orders_no = #{ordersNo}
    </select>

 <!-- <select id="listByOrderNo" resultMap="OrderWithUserResultMap">
    SELECT o.orders_no, o.user_no, u.user_name, u.user_phone, u.user_birth, 
        u.user_address, u.user_email, u.user_gender, u.user_id, 
        u.user_password, u.user_reg_date, u.user_coupon, u.user_upd_date, 
        u.enabled, u.status, o.order_status, o.total_quantity, o.total_price, 
        o.upd_date, o.reg_date, o.total_count, o.title, oi.item_no, oi.quantity, 
        oi.price, oi.amount, oi.upd_date, oi.reg_date, s.service_no, s.service_category, 
        s.service_name, s.service_price, s.service_content, s.upd_date, s.reg_date, s.partner_no,
        p.payment_no, p.payment_method, p.status AS payment_status, p.pay_date, 
        p.reg_date AS payment_reg_date, p.upd_date AS payment_upd_date, p.service_date
        FROM orders o
        JOIN users u ON o.user_no = u.user_no
        JOIN order_item oi ON o.orders_no = oi.orders_no
        JOIN service s ON oi.service_no = s.service_no
        JOIN payment p ON o.orders_no = p.orders_no
    WHERE o.orders_no = #{ordersNo};
</select> -->

</mapper>